-- Copyright (c) 2012, Christoph Pohl BSD License (see
-- http://www.opensource.org/licenses/BSD-3-Clause)
-------------------------------------------------------------------------------
--
-- Project Euler Problem 2
--
-- Each new term in the Fibonacci sequence is generated by adding the previous
-- two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5,
-- 8, 13, 21, 34, 55, 89, ...  By considering the terms in the Fibonacci
-- sequence whose values do not exceed four million, find the sum of the
-- even-valued terms.

module Main where
 
main :: IO ()
main = print result

result = sum (takeWhile (<4000000) (filter even (map fibonacci [1..])))

fibonacci :: Integer -> Integer
fibonacci x | x==1 = 1
			| x==2 = 2
			| otherwise  = fibonacci(x-1) + fibonacci(x-2)
